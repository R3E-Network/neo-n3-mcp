name: CI

on:
  push:
    branches: [ main, master, development ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Check for package-lock.json
      id: check-lock-file
      run: |
        if [ -f "package-lock.json" ]; then
          echo "lock_file_exists=true" >> $GITHUB_OUTPUT
        else
          echo "lock_file_exists=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Install dependencies (with lock file)
      if: steps.check-lock-file.outputs.lock_file_exists == 'true'
      run: npm ci
    
    - name: Install dependencies (without lock file)
      if: steps.check-lock-file.outputs.lock_file_exists == 'false'
      run: npm install --no-package-lock
    
    - name: Generate lock file if missing
      if: steps.check-lock-file.outputs.lock_file_exists == 'false'
      run: npm install --package-lock-only --no-package-lock
    
    - name: Build
      run: npm run build
    
    - name: Test
      run: npm run test:simple
    
    - name: Network test
      run: npm run test:network
      continue-on-error: true

  test-docker:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: docker build -t r3e/neo-n3-mcp:test .
    
    - name: Test Docker image
      run: |
        docker run --name neo-n3-mcp-test -d r3e/neo-n3-mcp:test
        docker ps | grep neo-n3-mcp-test
        docker logs neo-n3-mcp-test
        docker stop neo-n3-mcp-test
        docker rm neo-n3-mcp-test 