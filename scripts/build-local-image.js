#!/usr/bin/env node
import { execSync } from 'child_process';
import { readFileSync, writeFileSync } from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Get the directory name of the current module
const __dirname = path.dirname(fileURLToPath(import.meta.url));
const rootDir = path.resolve(__dirname, '..');

// Read package.json
const packageJsonPath = path.join(rootDir, 'package.json');
const packageJson = JSON.parse(readFileSync(packageJsonPath, 'utf8'));

const version = packageJson.version;
const dockerImage = "r3e/neo-n3-mcp";
const dockerTag = `${dockerImage}:${version}`;
const dockerLatest = `${dockerImage}:latest`;

console.log('Building the project locally first...');
try {
  // Build the project 
  execSync('npm run build', { stdio: 'inherit', cwd: rootDir });
  
  // Create a temporary Dockerfile for local builds
  const tempDockerfilePath = path.join(rootDir, 'Dockerfile.temp');
  const dockerfileContent = `
# This is a temporary Dockerfile generated by build-local-image.js
FROM busybox:latest

# Create directory structure
WORKDIR /app
RUN mkdir -p /app/dist /app/node_modules /app/wallets

# Copy necessary files from the host
COPY ./dist /app/dist
COPY ./package.json /app/package.json
COPY ./node_modules /app/node_modules

# Labels
LABEL org.opencontainers.image.title="Neo N3 MCP Server"
LABEL org.opencontainers.image.description="MCP server for Neo N3 blockchain integration"
LABEL org.opencontainers.image.licenses="MIT"
LABEL org.opencontainers.image.vendor="R3E Network"
LABEL org.opencontainers.image.source="https://github.com/R3E-Network/neo-n3-mcp"
LABEL org.opencontainers.image.documentation="https://github.com/R3E-Network/neo-n3-mcp#readme"

# Environment variables
ENV NODE_ENV=production
ENV NEO_RPC_URL=http://neo-node:10332
ENV WALLET_PATH=/app/wallets

# The busybox image doesn't have Node.js, so this is just a container with the files
# This is just a placeholder - you'll need to install Node.js to actually run the app
CMD ["/bin/sh", "-c", "echo 'This image contains the Neo N3 MCP server files but requires Node.js to run'"]
`;

  writeFileSync(tempDockerfilePath, dockerfileContent);
  console.log('Created temporary Dockerfile for local build');
  
  // Build Docker image
  console.log(`Building Docker image ${dockerTag}...`);
  execSync(`docker build -f Dockerfile.temp -t ${dockerTag} -t ${dockerLatest} ${rootDir}`, {
    stdio: 'inherit',
    cwd: rootDir
  });
  
  // Clean up
  execSync(`rm ${tempDockerfilePath}`, { cwd: rootDir });
  
  console.log('\nDocker image built successfully.');
  console.log('Note: This image contains the Neo N3 MCP server files but requires Node.js to be installed manually.');
  console.log('\nTo push to Docker Hub, run:');
  console.log(`docker push ${dockerTag}`);
  console.log(`docker push ${dockerLatest}`);
} catch (error) {
  console.error('Error:', error.message);
  process.exit(1);
} 